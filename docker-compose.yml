services:
  backend:
    image: registry.gitlab.com/self-evolving/aspire/aspire-server:latest
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8083:8080"
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    environment:
      - DB_HOST=db
      - DB_NAME=wishlistDB
      - DB_USER=postgres
      - DB_PASS=Testowe123!
      - DB_PORT=5432
    restart: unless-stopped
    container_name: aspire-server

  firebase:
    image: registry.gitlab.com/self-evolving/aspire/aspire-firebase-api:v0.1.0
    ports:
      - "7025:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    restart: unless-stopped
    container_name: aspire-firebase

  db:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=wishlistDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Testowe123!
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    container_name: aspire-db

volumes:
  db-data:
